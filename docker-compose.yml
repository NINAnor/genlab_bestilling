volumes:
  pgdata: {}
  statics: {}

x-django-env: &django-env
  DATABASE_URL: "postgis://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres?sslmode=disable"
  DJANGO_SETTINGS_MODULE: config.settings.production
  DJANGO_ACCOUNT_ALLOW_REGISTRATION: "False"
  USE_DOCKER: "yes"
  DJANGO_BASE_SCHEMA_URL: "http://django:8000"

x-django-prod-env: &django-prod-env
  <<: *django-env
  DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
  DJANGO_SERVER_EMAIL: ""
  DJANGO_ADMIN_URL: admin/
  DJANGO_SECURE_SSL_REDIRECT: False
  WEB_CONCURRENCY: 4
  DJANGO_ALLOWED_HOSTS: "localhost,django"

x-django-dev-env: &django-dev-env
  <<: *django-env
  DJANGO_SETTINGS_MODULE: config.settings.local
  IPYTHONDIR: "/app/.ipython"

x-django: &django
  build:
    target: django
  depends_on:
    - postgres
  environment:
    <<: *django-env


x-django-prod: &django-prod
  <<: *django
  depends_on:
    - postgres
  profiles:
    - prod
  command: gunicorn config.wsgi --bind 0.0.0.0:8000 --chdir=/app

x-django-dev: &django-dev
  <<: *django
  build:
    target: dev
  profiles:
    - dev
  environment:
    <<: *django-dev-env
  volumes:
    - ./src:/app/src
    - ./media:/app/media
  command: manage.py runserver 0.0.0.0:8000
  #command: python -m pdb -c continue manage.py runserver 0.0.0.0:8000 --nothreading --noreload

services:
  django:
    <<: *django-prod
    environment:
      <<: *django-prod-env
      DJANGO_COLLECTSTATIC: 1
      DJANGO_MIGRATE: 1
    volumes:
      - statics:/app/staticfiles

  django-dev:
    <<: *django-dev
    tty: true
    stdin_open: true
    hostname: django
    environment:
      <<: *django-dev-env
      DJANGO_MIGRATE: 1



  postgres:
    image: postgres:16
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432

  # documentation
  docs-dev:
    build:
      context: ./docs
      target: dev
    volumes:
      - ./docs:/book
    ports:
      - '3001:3000'
    command: serve --hostname 0.0.0.0
    profiles:
      - dev

  docs:
    build:
      context: ./docs
      target: prod
    ports:
      - '3000:80'
    profiles:
      - prod

  nginx:
    build:
      context: ./nginx
    profiles:
      - prod
    volumes:
      - statics:/statics
    ports:
      - 8000:80

  nginx-dev:
    hostname: nginx
    profiles:
      - dev
    build:
      context: ./nginx
    volumes:
      - ./media:/media_files
    ports:
      - 8000:80
